package com.sysquare.ims.model.domain;

// Generated 30 Sep, 2012 3:42:28 PM by Hibernate Tools 3.2.1.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Faculty generated by hbm2java
 */
@Entity
@Table(name = "faculty", catalog = "ims")
public class Faculty implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer facultyId;
	private String firstName;
	private String lastName;
	private Date dob;
	private String qualification;
	private String address;
	private String mobile;
	private byte experience;
	private Date joinDate;
	private boolean isActive;
	private Date createDate;
	private Date lastModifiedDate;
	private Set<CourseSubjectBatch> courseSubjectBatchs = new HashSet<CourseSubjectBatch>(0);
	private User updatedBy;

	public Faculty() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "faculty_id", unique = true, nullable = false)
	public Integer getFacultyId() {
		return this.facultyId;
	}

	public void setFacultyId(Integer facultyId) {
		this.facultyId = facultyId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by", nullable = false)
	public User getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(User updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Column(name = "first_name", nullable = false, length = 64)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 64)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "qualification", nullable = false)
	public String getQualification() {
		return this.qualification;
	}

	public void setQualification(String qualification) {
		this.qualification = qualification;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "mobile", nullable = false, length = 20)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "experience", nullable = false)
	public byte getExperience() {
		return this.experience;
	}

	public void setExperience(byte experience) {
		this.experience = experience;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "join_date", nullable = false, length = 10)
	public Date getJoinDate() {
		return this.joinDate;
	}

	public void setJoinDate(Date joinDate) {
		this.joinDate = joinDate;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", nullable = false, length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified_date", nullable = false, length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "faculty")
	public Set<CourseSubjectBatch> getCourseSubjectBatchs() {
		return this.courseSubjectBatchs;
	}

	public void setCourseSubjectBatchs(Set<CourseSubjectBatch> courseSubjectBatchs) {
		this.courseSubjectBatchs = courseSubjectBatchs;
	}

}
