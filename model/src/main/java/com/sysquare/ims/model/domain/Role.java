package com.sysquare.ims.model.domain;
// Generated 28 Aug, 2012 9:23:52 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name="role"
    ,catalog="ims"
    , uniqueConstraints = {@UniqueConstraint(columnNames="name"), @UniqueConstraint(columnNames="display_name")} 
)
public class Role  implements java.io.Serializable {


     private Integer roleId;
     private String name;
     private String displayName;
     private boolean isActive;
     private Set<User> users = new HashSet<User>(0);

    public Role() {
    }

	
    public Role(boolean isActive) {
        this.isActive = isActive;
    }
    public Role(String name, String displayName, boolean isActive, Set<User> users) {
       this.name = name;
       this.displayName = displayName;
       this.isActive = isActive;
       this.users = users;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="role_id", unique=true, nullable=false)
    public Integer getRoleId() {
        return this.roleId;
    }
    
    public void setRoleId(Integer roleId) {
        this.roleId = roleId;
    }
    
    @Column(name="name", unique=true, length=64)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="display_name", unique=true, length=64)
    public String getDisplayName() {
        return this.displayName;
    }
    
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }
    
    @Column(name="is_active", nullable=false)
    public boolean isIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="role")
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }




}


