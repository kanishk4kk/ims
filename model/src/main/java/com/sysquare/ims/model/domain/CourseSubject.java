package com.sysquare.ims.model.domain;

// Generated 30 Sep, 2012 3:42:28 PM by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * CourseSubject generated by hbm2java
 */
@Entity
@Table(name = "course_subject", catalog = "ims", uniqueConstraints = @UniqueConstraint(columnNames = { "course_id", "subject_id" }))
public class CourseSubject implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer courseSubjectId;
	private User updatedBy;
	private Course course;
	private Subject subject;
	private boolean isActive;
	private Set<CourseSubjectStudent> courseSubjectStudents = new HashSet<CourseSubjectStudent>(0);
	private Set<CourseSubjectBatch> courseSubjectBatchs = new HashSet<CourseSubjectBatch>(0);
	private Set<Note> notes = new HashSet<Note>(0);
	private Set<Paper> papers = new HashSet<Paper>(0);

	public CourseSubject() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "course_subject_id", unique = true, nullable = false)
	public Integer getCourseSubjectId() {
		return this.courseSubjectId;
	}

	public void setCourseSubjectId(Integer courseSubjectId) {
		this.courseSubjectId = courseSubjectId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by", nullable = false)
	public User getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(User updatedBy) {
		this.updatedBy = updatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_id", nullable = false)
	public Course getCourse() {
		return this.course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subject_id", nullable = false)
	public Subject getSubject() {
		return this.subject;
	}

	public void setSubject(Subject subject) {
		this.subject = subject;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "courseSubject")
	public Set<CourseSubjectStudent> getCourseSubjectStudents() {
		return this.courseSubjectStudents;
	}

	public void setCourseSubjectStudents(Set<CourseSubjectStudent> courseSubjectStudents) {
		this.courseSubjectStudents = courseSubjectStudents;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "courseSubject")
	public Set<CourseSubjectBatch> getCourseSubjectBatchs() {
		return this.courseSubjectBatchs;
	}

	public void setCourseSubjectBatchs(Set<CourseSubjectBatch> courseSubjectBatchs) {
		this.courseSubjectBatchs = courseSubjectBatchs;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "courseSubject")
	public Set<Note> getNotes() {
		return this.notes;
	}

	public void setNotes(Set<Note> notes) {
		this.notes = notes;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "courseSubject")
	public Set<Paper> getPapers() {
		return this.papers;
	}

	public void setPapers(Set<Paper> papers) {
		this.papers = papers;
	}

}
